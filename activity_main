# basicalculaor
--------------------ACTIVITY(XML)--------------------------------------------
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#3331a0"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="CALCULATOR"
        android:id="@+id/textView"
        android:textColor="#FFFF"
        android:textSize="40dp"
        android:textStyle="bold"
        android:layout_marginTop="40dp"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true" />

    <EditText
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:inputType="numberDecimal"
        android:ems="10"
        android:id="@+id/editText"
        android:hint="First Number"
        android:textColor="#FFFF"
        android:textColorHint="#FFE3CEFF"
        android:layout_above="@+id/editText2"
        android:layout_marginBottom="42dp"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentEnd="true"
        android:editable="true" />

    <EditText
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:inputType="numberDecimal"
        android:ems="10"
        android:textColor="#FFFF"
        android:id="@+id/editText2"
        android:hint="Second Number"
        android:textColorHint="#FFE3CEFF"
        android:layout_centerVertical="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentEnd="true" />

    <Button
        android:layout_width="75dp"
        android:layout_height="75dp"
        android:text="+"
        android:id="@+id/button"
        android:layout_below="@+id/editText2"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true"
        android:layout_marginRight="8dp"
        android:layout_marginTop="40dp"
        android:textSize="30dp" />

    <Button
        android:layout_width="75dp"
        android:layout_height="75dp"
        android:text="-"
        android:id="@+id/button2"
        android:textSize="30dp"
        android:layout_alignTop="@+id/button"
        android:layout_toRightOf="@+id/button"
        android:layout_marginRight="8dp"
        android:layout_toEndOf="@+id/button" />

    <Button
        android:layout_width="75dp"
        android:layout_height="75dp"
        android:text="*"
        android:textSize="30dp"
        android:id="@+id/button3"
        android:layout_marginRight="8dp"
        android:layout_alignTop="@+id/button2"
        android:layout_toRightOf="@+id/button2"
        android:layout_toEndOf="@+id/button2" />

    <Button
        android:layout_width="75dp"
        android:layout_height="75dp"
        android:text="/"
        android:textSize="30dp"
        android:id="@+id/button4"
        android:layout_alignTop="@+id/button3"
        android:layout_toRightOf="@+id/button3"
        android:layout_toEndOf="@+id/button3" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="RESULT"
        android:textColor="#FFFF"
        android:textSize="30dp"
        android:layout_marginTop="20dp"
        android:id="@+id/textView2"
        android:layout_below="@+id/button"
        android:layout_centerHorizontal="true" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="0.0"
        android:textSize="25dp"
        android:textColor="#ca3f3f"
	android:id="@+id/textView3"
        android:layout_below="@+id/textView2"
        android:layout_centerHorizontal="true" />
</RelativeLayout>
--------------------------------------------------------------------------------------------
---------------------------------MAIN ACTIVITY---------------------------------------------
package com.example.ramcharan.sample;

import android.content.Context;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    private Button sum,diff,mul,div;
    private EditText firstNO,secondNo;
    private TextView res;
    private double s,x,y,z;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        sum=(Button) findViewById(R.id.button);
        diff=(Button) findViewById(R.id.button2);
        mul=(Button) findViewById(R.id.button3);
        div=(Button) findViewById(R.id.button4);
        firstNO=(EditText) findViewById(R.id.editText);
        secondNo=(EditText) findViewById(R.id.editText2);
        res=(TextView) findViewById(R.id.textView3);

        sum.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    double first = Double.parseDouble(firstNO.getText().toString());
                    double second = Double.parseDouble(secondNo.getText().toString());
                    s = first + second;
                    res.setText("The sum is " + s);}
                catch(NumberFormatException e)
                {
                    if(firstNO.getText().toString().trim().length()==0)
                    {
                        firstNO.setError("Field cannot be empty");
                    }

                    if(secondNo.getText().toString().trim().length()==0)
                    {
                        secondNo.setError("Field cannot be empty");
                    }

                }
                InputMethodManager kc =(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                kc.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS);
            }
        });

        diff.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try{
                    double first = Double.parseDouble(firstNO.getText().toString());
                    double second = Double.parseDouble(secondNo.getText().toString());
                    x = first - second;
                    res.setText("The dif is" + x);}
                catch(NumberFormatException e)
                {
                    if(firstNO.getText().toString().trim().length()==0)
                    {
                        firstNO.setError("Field cannot be empty");
                    }

                    if(secondNo.getText().toString().trim().length()==0)
                    {
                        secondNo.setError("Field cannot be empty");
                    }

                }
                InputMethodManager kc =(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                kc.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS);
            }
        });

        mul.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try{
                    double first = Double.parseDouble(firstNO.getText().toString());
                    double second = Double.parseDouble(secondNo.getText().toString());
                    y = first * second;
                    res.setText("The prod is" + y);}
                catch(NumberFormatException e)
                {
                    if(firstNO.getText().toString().trim().length()==0)
                    {
                        firstNO.setError("Field cannot be empty");
                    }

                    if(secondNo.getText().toString().trim().length()==0)
                    {
                        secondNo.setError("Field cannot be empty");
                    }

                }
                InputMethodManager kc =(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                kc.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS);
            }
        });

        div.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try{
                    double first = Double.parseDouble(firstNO.getText().toString());
                    double second = Double.parseDouble(secondNo.getText().toString());
                    z = first / second;
                    res.setText("The div is " + z);}
                catch(NumberFormatException e)
                {
                    if(firstNO.getText().toString().trim().length()==0)
                    {
                        firstNO.setError("Field cannot be empty");
                    }

                    if(secondNo.getText().toString().trim().length()==0)
                    {
                        secondNo.setError("Field cannot be empty");
                    }

                }
                InputMethodManager kc =(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                kc.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS);
            }
        });

    }


}
